/* Main function of the C program. */

#include<stdio.h>
#include<string.h>
 
int main()
{
    int arraySize = 100; //integer created to allow ease of increasing and decreasing array size of original message and encrypted message
	char *substitution_Key = "mnbvcxzlkjhgfdsapoiuytrewq"; //nominates the cypher code to be used in the exercise
	char *position_ptr;
	char substitutionMessage[arraySize], substitutionCode[arraySize]; //declares two arrays to be used - the first for original message to be entered into, and second to store the encrypted code
	int messageLength, i, position, temp; //declares the integers needed for the exercise
	
	printf("Enter message to be encrypted using Substitution Cipher:"); //prints message to screen as prompt for user to enter the message to be encrypted
	fgets(substitutionCode, sizeof(substitutionCode), stdin); //fgets is a function used to grab the message in the previous line and store in "substitutionMessage". (pointer to array of chars, max number of characters to be read, 
	                                                               //and file that the characters are read from)
	messageLength = strlen(substitutionCode); //determines the string length of "substitutionCode"
	
	substitutionCode[messageLength];       //defines array size of the encrypted message
	for (i=0; substitutionCode[i] != '\0'; i++)   {       //Loop used to continue through each character of the original input or in this case "substitutionMessage"
	    position_ptr = strchr(substitution_Key, substitutionCode[i]);
	    position = (position_ptr == NULL ? -1 : position_ptr - substitution_Key);
	    printf("position equals %d\n", position);
	    
	    temp = position + 'a';
	    
	        if (temp >= 'a' && temp <= 'z') {
	            temp = temp - 32;
	        }
	        else if (temp >= 'A' && temp <= 'Z')    {
	            temp = temp;
	        }
	    
	    substitutionCode[i] = temp;
	    
	    
	}
	
	substitutionCode[messageLength] = 0; //this null terminates the string which effectively tells you where the end of the string is
	
	printf("Decrypted message: %s", substitutionCode); //prints encrypted message to screen
	
	return 0;
}
