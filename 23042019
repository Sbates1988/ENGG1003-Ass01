/* Main function of the C program. */

#include<stdio.h>

void rotationEncrypt()
{
	char rotationMessage[100];      //array of size 100 used to store the original message input by the user
	char ch;        //character used to store encrypted character
	int i, key;         //defined integers for use throughout code
	
	printf("Enter message to be encrypted using Rotation Cipher: ");        //prints to screen to prompt user to input message to be encrypted
	fgets(rotationMessage, 100, stdin);         /* fgets is a function used to grab the message in the previous line and store in "substitutionMessage". (pointer to array of chars, max number of characters to be read,
	                                            and file that the characters are read from) */ 
	printf("Enter key: ");      //prints to screen to prompt user to input key that the message is to be encrypted by
	scanf("%d", &key);      //scanf reads a formatted input from stdin, in this case searches for an integer and stores it in key. 
	
	for(i = 0; rotationMessage[i] != '\0'; ++i) {       /*loop which initialises i (rotation message index) as 0, and executes while the index of rotation message is not null, and increments the index by 1 each loop
	                                                         which will execute to encrypt the entire original message*/
		ch = rotationMessage[i];        //stores original character in 'ch' before returning it back to the rotationMessage[i] 
		
		if (ch >= 'a' && ch <= 'z' && key != 0 && key != 26)  {         //determines whether the character is between ASCII numbers of 'a' and 'z', and also what the key is. If the key is 0 or 26 it will mean no change to the character
			ch = (ch - 32) + key;           //because it's a lower case letter, it subtracts 32 to place the character in the capital letter ASCII range and then adds the key to encrypt the character
			
			if(ch > 'z')    {            // if character is greater than ASCII value 'z', 
				ch = (ch - 26) - 32;    // it will subtract 26 to return it back into the range a-z and then subtract 32 to enter as a capital
			}
			else if (ch < 'A')  {       //if less than ASCII value 'A'
			    ch = (ch + 26);         // will add 26 to return it into the ASCII value range between 'A'-'Z'
			}
			
			rotationMessage[i] = ch;        //returns excrypted character into rotationMessage array
		}
		else if (ch >= 'A' && ch <= 'Z' && key != 0 && key != 26)    {      //determines whether the character is between ASCII numbers of 'A' and 'Z', and also what the key is. If the key is 0 or 26 it will mean no change to the character
			ch = ch + key;      //because it's an upper case letter, key only is added to the character as it is already a capital letter
			
			if(ch > 'Z'){       // if character is greater than ASCII value 'Z',
				ch = ch - 26;   // subtract 26 to return it back into the range A-Z
			}
			else if (ch < 'A')  {   // if less than ASCII value 'A'
			    ch = ch + 26;       // will add 26 to return it into the ASCII value range between 'A'-'Z'
			}
			
			rotationMessage[i] = ch;        //returns excrypted character into rotationMessage array
		}
		else 
		    ch = rotationMessage[i];    //if character is a special character no encryption takes place. 
	}
	
	printf("Encrypted message: %s", rotationMessage);   //prints encrypted message to screen. 
	
}
 
int main()
{
    int cipherChoice, rotationChoice, subChoice;
    
    menu:
    
	printf("Choose from the following Cipher options -\n");
    printf("1: Rotation Cipher\n");
    printf("2: Substitution Cipher\n");
    printf("3: Exit Program\n");
    printf("    Choice:  ");

    scanf("%d", &cipherChoice);

    cipherChoice:

    switch(cipherChoice) {
        case 1:
            printf("\nRotation Cipher has been chosen.\n");
            printf("Choose from the following options:\n");
            printf("1: Encrypt\n");
            printf("2: Decrypt\n");
            printf("3: Exit Program\n");
            scanf("%d", &rotationChoice);
                switch(rotationChoice)  {
                    case 1:
                        printf("You have chosen to encrypt via Rotation Cipher\n");
                        rotationEncrypt();
                    break;
                
                    case 2:
                        printf("You have chosen to decrypt via Rotation Cipher\n");
                        printf("Enter key to decrypt by:");
                    break;
                
                    case 3:
                        printf("Exit Rotation Cipher chosen.\n");
                        goto cipherChoice;
                    break;
                
                    default:
                        printf("Invalid choice. Choose from options 1-3.");
                        goto cipherChoice;
                    break;
                }
        break;

        subChoice:

        case 2:
            printf("\nSubstitution Cipher has been chosen.\n");
            printf("Choose from the following options:\n");
            printf("1: Encrypt\n");
            printf("2: Decrypt\n");
            printf("3: Exit Program\n");
            scanf("%d", &subChoice);
                switch(subChoice)  {
                    case 1:
                        printf("You have chosen to encrypt via Substitution Cipher\n");
                        printf("Enter key to encrypt by:");
                    break;
                
                    case 2:
                        printf("You have chosen to decrypt via Substitution Cipher\n");
                        printf("Enter key to decrypt by:");
                    break;
                
                    case 3:
                        printf("Exit Substitution Cipher chosen.\n");
                        goto subChoice;
                    break;
                
                    default:
                        printf("Invalid choice. Choose from options 1-3.");
                        goto subChoice;
                    break;
                }
        break;

        case 3:
            printf("Exit program chosen.\n");
        break;
        
        default:
            printf("Invalid choice. Choose from options 1-3.");
            goto menu;
        break;
    }

	return 0;
}
